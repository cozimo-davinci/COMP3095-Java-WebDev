# -------------------------------------------------------------
# 1. docker-compose -p microservices-comp3095-ecommerce -f docker-compose.yml up -d
# - This command will start all the containers in detached mode (-d) without rebuilding the images (if they exist)
#
# 2. docker-compose -p microservice-comp3095-ecommerce -f docker-compose.yml up -d --build
# - This command forces the rebuild of images, even if they already exist, before starting them
#
# -------------------------------------------------------------


version: "3.9"

services:

    product-service:
      image: product-service

      ports:
        - "8086:8086"

      build:
        context: ./product-service  # The directory where the Dockerfile resides
        dockerfile: ./Dockerfile    # Specify the Dockerfile for use to build image

      container_name: product-service

      environment:
        SPRING_PROFILES_ACTIVE: docker
      depends_on:
        - mongodb
      networks:
        - spring

    mongodb:
      image: mongo:latest
      container_name: mongodb
      ports:
        - "27017:27017"
      environment:
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=password

      volumes:
        - ./data/mongo/products:/data/db
        - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js/:/docker-entrypoint-initdb.d/mongo-init.js:ro
      command: mongod --auth
      networks:
        - spring


    mongo-express:
      image: mongo-express:latest
      container_name: mongo-express
      ports:
        - "8081:8081"
      environment:
        - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
        - ME_CONFIG_MONGODB_ADMINPASSWORD=password
        - ME_CONFIG_MONGODB_SERVER=mongodb
      depends_on:
        - mongodb
networks:
  spring:
    driver: bridge
volumes:
   mongodb:
      driver: local
